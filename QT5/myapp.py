# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'myapp.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QWidget,QPushButton,QApplication,QListWidget,QGridLayout,QLabel,QMessageBox
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer,QDateTime
import keyboard as kb

from socket import *
import time

class Ui_MYAPP(object):
    def setupUi(self, MYAPP):
        MYAPP.setObjectName("MYAPP")
        MYAPP.resize(800, 600)
        MYAPP.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MYAPP)
        self.centralwidget.setObjectName("centralwidget")
        self.IP_input = QtWidgets.QLineEdit(self.centralwidget)
        self.IP_input.setGeometry(QtCore.QRect(130, 40, 311, 51))
        self.IP_input.setObjectName("IP_input")
        self.connect_button = QtWidgets.QPushButton(self.centralwidget)
        self.connect_button.setGeometry(QtCore.QRect(570, 40, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.connect_button.setFont(font)
        self.connect_button.setAutoRepeat(False)
        self.connect_button.setAutoExclusive(False)
        self.connect_button.setAutoRepeatDelay(400)
        self.connect_button.setAutoRepeatInterval(400)
        self.connect_button.setObjectName("connect_button")
        self.LED_1 = QtWidgets.QPushButton(self.centralwidget)
        self.LED_1.setGeometry(QtCore.QRect(90, 140, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LED_1.setFont(font)
        self.LED_1.setObjectName("LED_1")
        self.LED_2 = QtWidgets.QPushButton(self.centralwidget)
        self.LED_2.setGeometry(QtCore.QRect(90, 200, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LED_2.setFont(font)
        self.LED_2.setObjectName("LED_2")
        self.LED_3 = QtWidgets.QPushButton(self.centralwidget)
        self.LED_3.setGeometry(QtCore.QRect(90, 260, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LED_3.setFont(font)
        self.LED_3.setObjectName("LED_3")
        self.LED_4 = QtWidgets.QPushButton(self.centralwidget)
        self.LED_4.setGeometry(QtCore.QRect(90, 320, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LED_4.setFont(font)
        self.LED_4.setObjectName("LED_4")
        self.LED_5 = QtWidgets.QPushButton(self.centralwidget)
        self.LED_5.setGeometry(QtCore.QRect(90, 380, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LED_5.setFont(font)
        self.LED_5.setObjectName("LED_5")
        self.LED_Status_1 = QtWidgets.QLabel(self.centralwidget)
        self.LED_Status_1.setGeometry(QtCore.QRect(310, 140, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.LED_Status_1.setFont(font)
        self.LED_Status_1.setObjectName("LED_Status_1")
        self.LED_Status_2 = QtWidgets.QLabel(self.centralwidget)
        self.LED_Status_2.setGeometry(QtCore.QRect(313, 200, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.LED_Status_2.setFont(font)
        self.LED_Status_2.setObjectName("LED_Status_2")
        self.LED_Status_3 = QtWidgets.QLabel(self.centralwidget)
        self.LED_Status_3.setGeometry(QtCore.QRect(315, 263, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.LED_Status_3.setFont(font)
        self.LED_Status_3.setObjectName("LED_Status_3")
        self.LED_Status_4 = QtWidgets.QLabel(self.centralwidget)
        self.LED_Status_4.setGeometry(QtCore.QRect(316, 320, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.LED_Status_4.setFont(font)
        self.LED_Status_4.setObjectName("LED_Status_4")
        self.LED_Status_5 = QtWidgets.QLabel(self.centralwidget)
        self.LED_Status_5.setGeometry(QtCore.QRect(320, 380, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.LED_Status_5.setFont(font)
        self.LED_Status_5.setObjectName("LED_Status_5")
        self.PORT_input = QtWidgets.QLineEdit(self.centralwidget)
        self.PORT_input.setGeometry(QtCore.QRect(450, 40, 101, 51))
        self.PORT_input.setObjectName("PORT_input")
        MYAPP.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MYAPP)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MYAPP.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MYAPP)
        self.statusbar.setObjectName("statusbar")
        MYAPP.setStatusBar(self.statusbar)
        self.connect_button.clicked.connect(self.Connect)
        self.LED_1.clicked.connect(self.LED_1_CLICKED)
        self.LED_2.clicked.connect(self.LED_2_CLICKED)
        self.LED_3.clicked.connect(self.LED_3_CLICKED)

        self.timer = QTimer()
        self.timer.timeout.connect(self.showdisplay)
        self.msg = QMessageBox()
        self.showdisplay_start = 0
        self.i=0
        self.DataIN = ""
        self.L1 = "F"
        self.L2 = "F"
        self.status1 = False
        self.status2 = False
        self.DataSend = ""
        self.ttt =""




        self.retranslateUi(MYAPP)
        QtCore.QMetaObject.connectSlotsByName(MYAPP)

    def retranslateUi(self, MYAPP):
        _translate = QtCore.QCoreApplication.translate
        MYAPP.setWindowTitle(_translate("MYAPP", "MainWindow"))
        self.connect_button.setText(_translate("MYAPP", "Connect"))
        self.LED_1.setText(_translate("MYAPP", "LED 1"))
        self.LED_2.setText(_translate("MYAPP", "LED 2"))
        self.LED_3.setText(_translate("MYAPP", "LED 3"))
        self.LED_4.setText(_translate("MYAPP", "LED 4"))
        self.LED_5.setText(_translate("MYAPP", "LED 5"))
        self.LED_Status_1.setText(_translate("MYAPP", "ON"))
        self.LED_Status_2.setText(_translate("MYAPP", "ON"))
        self.LED_Status_3.setText(_translate("MYAPP", "ON"))
        self.LED_Status_4.setText(_translate("MYAPP", "ON"))
        self.LED_Status_5.setText(_translate("MYAPP", "ON"))
        self.IP_input.setText(_translate("MYAPP","192.168.1.243"))
        self.PORT_input.setText(_translate("MYAPP","8888"))

    def showdisplay(self):

        self.DataSend = self.L1+self.L2
        data = str.encode(self.DataSend, 'utf-8')  # Set data to Blue Command
        self.client_socket.sendto(data, self.address)  # send command to arduino
        try:
            rec_data, addr = self.client_socket.recvfrom(2048)  # Read response from arduino
            self.DataIN = rec_data.decode('utf-8')
            #print(self.DataIN)

            for i in self.DataIN:
                if(i!='\n'):
                    self.ttt += i
            #print(self.ttt+"\n")
            if kb.is_pressed('w'):
                print("W")
            data = ""



            #print(type(self.DataIN))  # Print the response from Arduino
            if self.DataIN[0] == 'N':
                self.LED_Status_1.setText('ON')
            if self.DataIN[0] == 'F':
                self.LED_Status_1.setText('OFF')
            if self.DataIN[1] == 'N':
                self.LED_Status_2.setText('ON')
            if self.DataIN[1] == 'F':
                self.LED_Status_2.setText('OFF')
        except:
            pass

    def Connect(self):
        #print(self.IP_input.text(),self.PORT_input.text())
        if self.IP_input.text() == "" or self.PORT_input.text() == "":
            self.msg.setWindowTitle("App")
            self.msg.setText("Not Connect Please Enter Ip And Port ")
            x = self.msg.exec_()
            #print(self.IP_input.text()+self.PORT_input.text())
        else:
            self.address = (str(self.IP_input.text()), int(self.PORT_input.text()))  # Defind who you are talking to (must match arduino IP and port)
            self.client_socket = socket(AF_INET, SOCK_DGRAM)  # Set Up the Socket
            self.client_socket.settimeout(0.0001)  # only wait 1 second for a resonse

            self.timer.start(10)
            print("Strat")
            self.connect_button.setEnabled(False)
            self.i=1





    def LED_1_CLICKED(self):
        if self.IP_input.text() == "" or self.PORT_input.text() == "" or self.i == 0:
            self.msg.setWindowTitle("App")
            self.msg.setText("Not Connect")
            x = self.msg.exec_()
            # print(self.IP_input.text()+self.PORT_input.text())
        else:
            self.status1 = not self.status1
            if self.status1 == True:
                self.L1 = "N"
            elif self.status1 == False:
                self.L1 = "F"

    def LED_2_CLICKED(self):
        if self.IP_input.text() == "" or self.PORT_input.text() == "" or self.i == 0:
            self.msg.setWindowTitle("App")
            self.msg.setText("Not Connect")
            x = self.msg.exec_()
            # print(self.IP_input.text()+self.PORT_input.text())
        else:
            self.status2 = not self.status2
            if self.status2 == True:
                self.L2 = "N"
            elif self.status2 == False:
                self.L2 = "F"


    def LED_3_CLICKED(self):
        if self.IP_input.text() == "" or self.PORT_input.text() == ""or self.i==0:
            self.msg.setWindowTitle("App")
            self.msg.setText("Not Connect")
            x = self.msg.exec_()
            # print(self.IP_input.text()+self.PORT_input.text())
        else:
            pass



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MYAPP = QtWidgets.QMainWindow()
    ui = Ui_MYAPP()
    ui.setupUi(MYAPP)
    MYAPP.show()


    sys.exit(app.exec_())
